basePath: /
definitions:
  common.AppRolloutStatus:
    properties:
      LastSourceAppRevision:
        description: |-
          LastSourceAppRevision contains the name of the app that we need to upgrade from.
          We will restart the rollout if this is not the same as the spec
        type: string
      batchRollingState:
        description: |-
          BatchRollingState only meaningful when the Status is rolling
          +optional
        type: string
      conditions:
        description: |-
          Conditions of the resource.
          +optional
        items:
          $ref: '#/definitions/condition.Condition'
        type: array
      currentBatch:
        description: |-
          The current batch the rollout is working on/blocked
          it starts from 0
        type: integer
      lastAppliedPodTemplateIdentifier:
        description: |-
          lastAppliedPodTemplateIdentifier is a string that uniquely represent the last pod template
          each workload type could use different ways to identify that so we cannot compare between resources
          We update this field only after a successful rollout
        type: string
      lastTargetAppRevision:
        description: |-
          LastUpgradedTargetAppRevision contains the name of the app that we upgraded to
          We will restart the rollout if this is not the same as the spec
        type: string
      rollingState:
        description: RollingState is the Rollout State
        type: string
      rolloutOriginalSize:
        description: |-
          RolloutTargetSize is the size of the target resources. This is determined once the initial spec verification
          and does not change until the rollout is restarted
        type: integer
      rolloutTargetSize:
        description: |-
          RolloutTargetSize is the size of the target resources. This is determined once the initial spec verification
          and does not change until the rollout is restarted
        type: integer
      targetGeneration:
        description: |-
          NewPodTemplateIdentifier is a string that uniquely represent the new pod template
          each workload type could use different ways to identify that so we cannot compare between resources
        type: string
      upgradedReadyReplicas:
        description: UpgradedReadyReplicas is the number of Pods upgraded by the rollout
          controller that have a Ready Condition.
        type: integer
      upgradedReplicas:
        description: UpgradedReplicas is the number of Pods upgraded by the rollout
          controller
        type: integer
    type: object
  common.AppStatus:
    properties:
      appliedResources:
        description: AppliedResources record the resources that the  workflow step
          apply.
        items:
          $ref: '#/definitions/common.ClusterObjectReference'
        type: array
      components:
        description: Components record the related Components created by Application
          Controller
        items:
          $ref: '#/definitions/v1.ObjectReference'
        type: array
      conditions:
        description: |-
          Conditions of the resource.
          +optional
        items:
          $ref: '#/definitions/condition.Condition'
        type: array
      latestRevision:
        $ref: '#/definitions/common.Revision'
        description: |-
          LatestRevision of the application configuration it generates
          +optional
      observedGeneration:
        description: |-
          The generation observed by the application controller.
          +optional
        type: integer
      resourceTracker:
        $ref: '#/definitions/v1.ObjectReference'
        description: ResourceTracker record the status of the ResourceTracker
      rollout:
        $ref: '#/definitions/common.AppRolloutStatus'
      services:
        description: Services record the status of the application services
        items:
          $ref: '#/definitions/common.ApplicationComponentStatus'
        type: array
      status:
        type: string
      workflow:
        $ref: '#/definitions/common.WorkflowStatus'
        description: Workflow record the status of workflow
    type: object
  common.ApplicationComponent:
    properties:
      dependsOn:
        items:
          type: string
        type: array
      externalRevision:
        description: ExternalRevision specified the component revisionName
        type: string
      inputs:
        items:
          $ref: '#/definitions/common.inputItem'
        type: array
      name:
        type: string
      outputs:
        items:
          $ref: '#/definitions/common.outputItem'
        type: array
      properties:
        $ref: '#/definitions/runtime.RawExtension'
        description: +kubebuilder:pruning:PreserveUnknownFields
      scopes:
        additionalProperties:
          type: string
        description: |-
          +kubebuilder:pruning:PreserveUnknownFields
          scopes in ApplicationComponent defines the component-level scopes
          the format is <scope-type:scope-instance-name> pairs, the key represents type of `ScopeDefinition` while the value represent the name of scope instance.
        type: object
      traits:
        description: Traits define the trait of one component, the type must be array
          to keep the order.
        items:
          $ref: '#/definitions/common.ApplicationTrait'
        type: array
      type:
        type: string
    type: object
  common.ApplicationComponentStatus:
    properties:
      env:
        type: string
      healthy:
        type: boolean
      message:
        type: string
      name:
        type: string
      scopes:
        items:
          $ref: '#/definitions/v1.ObjectReference'
        type: array
      traits:
        items:
          $ref: '#/definitions/common.ApplicationTraitStatus'
        type: array
      workloadDefinition:
        $ref: '#/definitions/common.WorkloadGVK'
        description: WorkloadDefinition is the definition of a WorkloadDefinition,
          such as deployments/apps.v1
    type: object
  common.ApplicationTrait:
    properties:
      properties:
        $ref: '#/definitions/runtime.RawExtension'
        description: +kubebuilder:pruning:PreserveUnknownFields
      type:
        type: string
    type: object
  common.ApplicationTraitStatus:
    properties:
      healthy:
        type: boolean
      message:
        type: string
      type:
        type: string
    type: object
  common.ClusterObjectReference:
    properties:
      apiVersion:
        description: |-
          API version of the referent.
          +optional
        type: string
      cluster:
        type: string
      creator:
        type: string
      fieldPath:
        description: |-
          If referring to a piece of an object instead of an entire object, this string
          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
          For example, if the object reference is to a container within a pod, this would take on a value like:
          "spec.containers{name}" (where "name" refers to the name of the container that triggered
          the event) or if no container name is specified "spec.containers[2]" (container with
          index 2 in this pod). This syntax is chosen only to have some well-defined way of
          referencing a part of an object.
          TODO: this design is not final and this field is subject to change in the future.
          +optional
        type: string
      kind:
        description: |-
          Kind of the referent.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
          +optional
        type: string
      resourceVersion:
        description: |-
          Specific resourceVersion to which this reference is made, if any.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      uid:
        description: |-
          UID of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
          +optional
        type: string
    type: object
  common.Revision:
    properties:
      name:
        type: string
      revision:
        type: integer
      revisionHash:
        description: RevisionHash record the hash value of the spec of ApplicationRevision
          object.
        type: string
    type: object
  common.SubStepsStatus:
    properties:
      mode:
        type: string
      stepIndex:
        type: integer
      steps:
        items:
          $ref: '#/definitions/common.WorkflowSubStepStatus'
        type: array
    type: object
  common.WorkflowStatus:
    properties:
      appRevision:
        type: string
      contextBackend:
        $ref: '#/definitions/v1.ObjectReference'
      mode:
        type: string
      steps:
        items:
          $ref: '#/definitions/common.WorkflowStepStatus'
        type: array
      suspend:
        type: boolean
      terminated:
        type: boolean
    type: object
  common.WorkflowStepStatus:
    properties:
      id:
        type: string
      message:
        description: A human readable message indicating details about why the workflowStep
          is in this state.
        type: string
      name:
        type: string
      phase:
        type: string
      reason:
        description: A brief CamelCase message indicating details about why the workflowStep
          is in this state.
        type: string
      subSteps:
        $ref: '#/definitions/common.SubStepsStatus'
      type:
        type: string
    type: object
  common.WorkflowSubStepStatus:
    properties:
      id:
        type: string
      message:
        description: A human readable message indicating details about why the workflowStep
          is in this state.
        type: string
      name:
        type: string
      phase:
        type: string
      reason:
        description: A brief CamelCase message indicating details about why the workflowStep
          is in this state.
        type: string
      type:
        type: string
    type: object
  common.WorkloadGVK:
    properties:
      apiVersion:
        type: string
      kind:
        type: string
    type: object
  common.inputItem:
    properties:
      from:
        type: string
      parameterKey:
        type: string
    type: object
  common.outputItem:
    properties:
      name:
        type: string
      valueFrom:
        type: string
    type: object
  condition.Condition:
    properties:
      lastTransitionTime:
        description: |-
          LastTransitionTime is the last time this condition transitioned from one
          status to another.
        type: string
      message:
        description: |-
          A Message containing details about this condition's last transition from
          one status to another, if any.
          +optional
        type: string
      reason:
        description: A Reason for this condition's last transition from one status
          to another.
        type: string
      status:
        description: Status of this condition; is it currently True, False, or Unknown?
        type: string
      type:
        description: |-
          Type of this condition. At most one of each condition type may apply to
          a resource at any point in time.
        type: string
    type: object
  ginx.GinXResult:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
      transaction.id:
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  intstr.IntOrString:
    properties:
      intVal:
        type: integer
      strVal:
        type: string
      type:
        type: integer
    type: object
  model.Permission:
    properties:
      alias:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      icon:
        type: string
      id:
        type: integer
      menu:
        type: boolean
      method:
        type: string
      name:
        type: string
      parentId:
        type: integer
      path:
        type: string
      updatedAt:
        type: string
    type: object
  model.Role:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      enabled:
        type: boolean
      id:
        type: integer
      level:
        type: integer
      name:
        type: string
      onlyKey:
        type: string
      permissions:
        items:
          $ref: '#/definitions/model.Permission'
        type: array
      updatedAt:
        type: string
    type: object
  model.Service:
    properties:
      alias:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      parentId:
        type: integer
      services:
        items:
          $ref: '#/definitions/model.Service'
        type: array
      updatedAt:
        type: string
    type: object
  model.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        description: 唯一
        type: string
      enable:
        type: boolean
      id:
        type: integer
      name:
        type: string
      passWord:
        type: string
      roles:
        items:
          $ref: '#/definitions/model.Role'
        type: array
      services:
        items:
          $ref: '#/definitions/model.Service'
        type: array
      token:
        type: string
      updatedAt:
        type: string
    type: object
  permission.SwagCreatePermissionBody:
    properties:
      alias:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      icon:
        type: string
      id:
        type: integer
      menu:
        type: boolean
      method:
        type: string
      name:
        type: string
      parentId:
        type: integer
      path:
        type: string
      updatedAt:
        type: string
    type: object
  permission.SwagUpdatePermissionBody:
    properties:
      alias:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      icon:
        type: string
      id:
        type: integer
      menu:
        type: boolean
      method:
        type: string
      name:
        type: string
      parentId:
        type: integer
      path:
        type: string
      updatedAt:
        type: string
    type: object
  role.SwagBindRolePermissionBody:
    properties:
      permission_id:
        type: integer
    type: object
  role.SwagUnBindRolePermissionBody:
    properties:
      permission_id:
        type: integer
    type: object
  runtime.RawExtension:
    type: object
  user.SwagBindUserPermissionBody:
    properties:
      domain_id:
        type: integer
      role_id:
        type: integer
    type: object
  user.SwagCreateBody:
    properties:
      hello:
        type: string
    type: object
  user.SwagUnBindUserPermissionBody:
    properties:
      domain_id:
        type: integer
      role_id:
        type: integer
    type: object
  v1.FieldsV1:
    type: object
  v1.ManagedFieldsEntry:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the version of this resource that this field set
          applies to. The format is "group/version" just like the top-level
          APIVersion field. It is necessary to track the version of a field
          set because it cannot be automatically converted.
        type: string
      fieldsType:
        description: |-
          FieldsType is the discriminator for the different fields format and version.
          There is currently only one possible value: "FieldsV1"
        type: string
      fieldsV1:
        $ref: '#/definitions/v1.FieldsV1'
        description: |-
          FieldsV1 holds the first JSON version format as described in the "FieldsV1" type.
          +optional
      manager:
        description: Manager is an identifier of the workflow managing these fields.
        type: string
      operation:
        description: |-
          Operation is the type of operation which lead to this ManagedFieldsEntry being created.
          The only valid values for this field are 'Apply' and 'Update'.
        type: string
      subresource:
        description: |-
          Subresource is the name of the subresource used to update that object, or
          empty string if the object was updated through the main resource. The
          value of this field is used to distinguish between managers, even if they
          share the same name. For example, a status update will be distinct from a
          regular update using the same manager name.
          Note that the APIVersion field is not related to the Subresource field and
          it always corresponds to the version of the main resource.
        type: string
      time:
        description: |-
          Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'
          +optional
        type: string
    type: object
  v1.ObjectReference:
    properties:
      apiVersion:
        description: |-
          API version of the referent.
          +optional
        type: string
      fieldPath:
        description: |-
          If referring to a piece of an object instead of an entire object, this string
          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
          For example, if the object reference is to a container within a pod, this would take on a value like:
          "spec.containers{name}" (where "name" refers to the name of the container that triggered
          the event) or if no container name is specified "spec.containers[2]" (container with
          index 2 in this pod). This syntax is chosen only to have some well-defined way of
          referencing a part of an object.
          TODO: this design is not final and this field is subject to change in the future.
          +optional
        type: string
      kind:
        description: |-
          Kind of the referent.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
          +optional
        type: string
      resourceVersion:
        description: |-
          Specific resourceVersion to which this reference is made, if any.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      uid:
        description: |-
          UID of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
          +optional
        type: string
    type: object
  v1.OwnerReference:
    properties:
      apiVersion:
        description: API version of the referent.
        type: string
      blockOwnerDeletion:
        description: |-
          If true, AND if the owner has the "foregroundDeletion" finalizer, then
          the owner cannot be deleted from the key-value store until this
          reference is removed.
          Defaults to false.
          To set this field, a user needs "delete" permission of the owner,
          otherwise 422 (Unprocessable Entity) will be returned.
          +optional
        type: boolean
      controller:
        description: |-
          If true, this reference points to the managing controller.
          +optional
        type: boolean
      kind:
        description: |-
          Kind of the referent.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
        type: string
      name:
        description: |-
          Name of the referent.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
        type: string
      uid:
        description: |-
          UID of the referent.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
        type: string
    type: object
  v1alpha1.CanaryMetric:
    properties:
      interval:
        description: Interval represents the windows size
        type: string
      metricsRange:
        $ref: '#/definitions/v1alpha1.MetricsExpectedRange'
        description: |-
          Range value accepted for this metric
          +optional
      name:
        description: Name of the metric
        type: string
      templateRef:
        $ref: '#/definitions/v1.ObjectReference'
        description: |-
          TemplateRef references a metric template object
          +optional
    type: object
  v1alpha1.MetricsExpectedRange:
    properties:
      max:
        $ref: '#/definitions/intstr.IntOrString'
        description: |-
          Maximum value
          +optional
      min:
        $ref: '#/definitions/intstr.IntOrString'
        description: |-
          Minimum value
          +optional
    type: object
  v1alpha1.RolloutBatch:
    properties:
      batchRolloutWebhooks:
        description: |-
          RolloutWebhooks provides a way for the batch rollout to interact with an external process
          +optional
        items:
          $ref: '#/definitions/v1alpha1.RolloutWebhook'
        type: array
      canaryMetric:
        description: |-
          CanaryMetric provides a way for the batch rollout process to automatically check certain metrics
          before moving to the next batch
          +optional
        items:
          $ref: '#/definitions/v1alpha1.CanaryMetric'
        type: array
      instanceInterval:
        description: |-
          The wait time, in seconds, between instances upgrades, default = 0
          +optional
        type: integer
      maxUnavailable:
        $ref: '#/definitions/intstr.IntOrString'
        description: |-
          MaxUnavailable is the max allowed number of pods that is unavailable
          during the upgrade. We will mark the batch as ready as long as there are less
          or equal number of pods unavailable than this number.
          default = 0
          +optional
      podList:
        description: |-
          The list of Pods to get upgraded
          +optional
          it is mutually exclusive with the Replicas field
        items:
          type: string
        type: array
      replicas:
        $ref: '#/definitions/intstr.IntOrString'
        description: |-
          Replicas is the number of pods to upgrade in this batch
          it can be an absolute number (ex: 5) or a percentage of total pods
          we will ignore the percentage of the last batch to just fill the gap
          +optional
          it is mutually exclusive with the PodList field
    type: object
  v1alpha1.RolloutPlan:
    properties:
      batchPartition:
        description: |-
          All pods in the batches up to the batchPartition (included) will have
          the target resource specification while the rest still have the source resource
          This is designed for the operators to manually rollout
          Default is the the number of batches which will rollout all the batches
          +optional
        type: integer
      canaryMetric:
        description: |-
          CanaryMetric provides a way for the rollout process to automatically check certain metrics
          before complete the process
          +optional
        items:
          $ref: '#/definitions/v1alpha1.CanaryMetric'
        type: array
      numBatches:
        description: |-
          The number of batches, default = 1
          +optional
        type: integer
      paused:
        description: |-
          Paused the rollout, default is false
          +optional
        type: boolean
      rolloutBatches:
        description: |-
          The exact distribution among batches.
          its size has to be exactly the same as the NumBatches (if set)
          The total number cannot exceed the targetSize or the size of the source resource
          We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum
          We highly recommend to leave the last batch's replica field empty
          +optional
        items:
          $ref: '#/definitions/v1alpha1.RolloutBatch'
        type: array
      rolloutStrategy:
        description: |-
          RolloutStrategy defines strategies for the rollout plan
          The default is IncreaseFirstRolloutStrategyType
          +optional
        type: string
      rolloutWebhooks:
        description: |-
          RolloutWebhooks provide a way for the rollout to interact with an external process
          +optional
        items:
          $ref: '#/definitions/v1alpha1.RolloutWebhook'
        type: array
      targetSize:
        description: |-
          The size of the target resource. The default is the same
          as the size of the source resource.
          +optional
        type: integer
    type: object
  v1alpha1.RolloutWebhook:
    properties:
      expectedStatus:
        description: ExpectedStatus contains all the expected http status code that
          we will accept as success
        items:
          type: integer
        type: array
      metadata:
        additionalProperties:
          type: string
        description: |-
          Metadata (key-value pairs) for this webhook
          +optional
        type: object
      method:
        description: Method the HTTP call method, default is POST
        type: string
      name:
        description: Name of this webhook
        type: string
      type:
        description: Type of this webhook
        type: string
      url:
        description: URL address of this webhook
        type: string
    type: object
  v1beta1.AppPolicy:
    properties:
      name:
        description: Name is the unique name of the policy.
        type: string
      properties:
        $ref: '#/definitions/runtime.RawExtension'
        description: +kubebuilder:pruning:PreserveUnknownFields
      type:
        type: string
    type: object
  v1beta1.Application:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          Finalizers may be processed and removed in any order.  Order is NOT enforced
          because it introduces significant risk of stuck finalizers.
          finalizers is a shared field, any actor with permission can reorder it.
          If the finalizer list is processed in order, then this can lead to a situation
          in which the component responsible for the first finalizer in the list is
          waiting for a signal (field value, external system, or other) produced by a
          component responsible for a finalizer later in the list, resulting in a deadlock.
          Without enforced ordering finalizers are free to order amongst themselves and
          are not vulnerable to ordering changes in the list.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      managedFields:
        description: |-
          ManagedFields maps workflow-id and version to the set of fields
          that are managed by that workflow. This is mostly for internal
          housekeeping, and users typically shouldn't need to set or
          understand this field. A workflow can be the user's name, a
          controller's name, or the name of a specific apply path like
          "ci-cd". The set of fields is always in the version that the
          workflow used when modifying the object.

          +optional
        items:
          $ref: '#/definitions/v1.ManagedFieldsEntry'
        type: array
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within which each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.

          DEPRECATED
          Kubernetes will stop propagating this field in 1.20 release and the field is planned
          to be removed in 1.21 release.
          +optional
        type: string
      spec:
        $ref: '#/definitions/v1beta1.ApplicationSpec'
      status:
        $ref: '#/definitions/common.AppStatus'
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1beta1.ApplicationSpec:
    properties:
      components:
        items:
          $ref: '#/definitions/common.ApplicationComponent'
        type: array
      policies:
        description: |-
          Policies defines the global policies for all components in the app, e.g. security, metrics, gitops,
          multi-cluster placement rules, etc.
          Policies are applied after components are rendered and before workflow steps are executed.
        items:
          $ref: '#/definitions/v1beta1.AppPolicy'
        type: array
      rolloutPlan:
        $ref: '#/definitions/v1alpha1.RolloutPlan'
        description: |-
          RolloutPlan is the details on how to rollout the resources
          The controller simply replace the old resources with the new one if there is no rollout plan involved
          +optional
      workflow:
        $ref: '#/definitions/v1beta1.Workflow'
        description: |-
          Workflow defines how to customize the control logic.
          If workflow is specified, Vela won't apply any resource, but provide rendered output in AppRevision.
          Workflow steps are executed in array order, and each step:
          - will have a context in annotation.
          - should mark "finish" phase in status.conditions.
    type: object
  v1beta1.Workflow:
    properties:
      steps:
        items:
          $ref: '#/definitions/v1beta1.WorkflowStep'
        type: array
    type: object
  v1beta1.WorkflowStep:
    properties:
      dependsOn:
        items:
          type: string
        type: array
      inputs:
        items:
          $ref: '#/definitions/common.inputItem'
        type: array
      name:
        description: Name is the unique name of the workflow step.
        type: string
      outputs:
        items:
          $ref: '#/definitions/common.outputItem'
        type: array
      properties:
        $ref: '#/definitions/runtime.RawExtension'
        description: +kubebuilder:pruning:PreserveUnknownFields
      type:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /k8s/:namespace/app/:name:
    get:
      consumes:
      - application/json
      description: 获取app
      parameters:
      - description: ' '
        in: path
        name: namespace
        required: true
        type: string
      - description: ' '
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ginx.GinXResult'
            - properties:
                data:
                  $ref: '#/definitions/v1beta1.Application'
              type: object
  /permission:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/permission.SwagCreatePermissionBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ginx.GinXResult'
            - properties:
                data:
                  type: string
              type: object
    put:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/permission.SwagUpdatePermissionBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ginx.GinXResult'
            - properties:
                data:
                  type: string
              type: object
  /permission/:id:
    get:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ginx.GinXResult'
            - properties:
                data:
                  $ref: '#/definitions/model.Permission'
              type: object
  /permisssion/:id:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ginx.GinXResult'
            - properties:
                data:
                  type: string
              type: object
  /role/:role_id/permission:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/role.SwagUnBindRolePermissionBody'
      - description: ' '
        in: path
        name: role_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ginx.GinXResult'
            - properties:
                data:
                  type: string
              type: object
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/role.SwagBindRolePermissionBody'
      - description: ' '
        in: path
        name: role_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ginx.GinXResult'
            - properties:
                data:
                  type: string
              type: object
  /say:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: say
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ginx.GinXResult'
            - properties:
                data:
                  type: string
              type: object
  /user:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/user.SwagCreateBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ginx.GinXResult'
            - properties:
                data:
                  type: object
              type: object
  /user/:id:
    get:
      consumes:
      - application/json
      description: get user by id
      parameters:
      - description: ' '
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ginx.GinXResult'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
  /user/:user_id/permission:
    delete:
      consumes:
      - application/json
      description: 用户解除绑定
      parameters:
      - description: ' '
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/user.SwagUnBindUserPermissionBody'
      - description: ' '
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ginx.GinXResult'
            - properties:
                data:
                  type: string
              type: object
    post:
      consumes:
      - application/json
      description: 给用户绑定角色和服务
      parameters:
      - description: ' '
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/user.SwagBindUserPermissionBody'
      - description: ' '
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ginx.GinXResult'
            - properties:
                data:
                  type: string
              type: object
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
