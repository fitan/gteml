// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/k8s/:namespace/app/:name": {
            "get": {
                "description": "获取app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": " ",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ginx.XResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/v1beta1.Application"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/permission": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/permission.SwagUpdatePermissionBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ginx.XResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/permission.SwagCreatePermissionBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ginx.XResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/permission/:id": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ginx.XResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Permission"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/permisssion/:id": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ginx.XResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/role/:role_id/permission": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/role.SwagBindRolePermissionBody"
                        }
                    },
                    {
                        "type": "string",
                        "description": " ",
                        "name": "role_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ginx.XResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/role.SwagUnBindRolePermissionBody"
                        }
                    },
                    {
                        "type": "string",
                        "description": " ",
                        "name": "role_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ginx.XResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/say": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "name": "say",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ginx.XResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.SwagCreateBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ginx.XResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/:id": {
            "get": {
                "description": "get user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ginx.XResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.User"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/:user_id/permission": {
            "post": {
                "description": "给用户绑定角色和服务",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.SwagBindUserPermissionBody"
                        }
                    },
                    {
                        "type": "string",
                        "description": " ",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ginx.XResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "用户解除绑定",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.SwagUnBindUserPermissionBody"
                        }
                    },
                    {
                        "type": "string",
                        "description": " ",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ginx.XResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common.AppRolloutStatus": {
            "type": "object",
            "properties": {
                "LastSourceAppRevision": {
                    "description": "LastSourceAppRevision contains the name of the app that we need to upgrade from.\nWe will restart the rollout if this is not the same as the spec",
                    "type": "string"
                },
                "batchRollingState": {
                    "description": "BatchRollingState only meaningful when the Status is rolling\n+optional",
                    "type": "string"
                },
                "conditions": {
                    "description": "Conditions of the resource.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/condition.Condition"
                    }
                },
                "currentBatch": {
                    "description": "The current batch the rollout is working on/blocked\nit starts from 0",
                    "type": "integer"
                },
                "lastAppliedPodTemplateIdentifier": {
                    "description": "lastAppliedPodTemplateIdentifier is a string that uniquely represent the last pod template\neach workload type could use different ways to identify that so we cannot compare between resources\nWe update this field only after a successful rollout",
                    "type": "string"
                },
                "lastTargetAppRevision": {
                    "description": "LastUpgradedTargetAppRevision contains the name of the app that we upgraded to\nWe will restart the rollout if this is not the same as the spec",
                    "type": "string"
                },
                "rollingState": {
                    "description": "RollingState is the Rollout State",
                    "type": "string"
                },
                "rolloutOriginalSize": {
                    "description": "RolloutTargetSize is the size of the target resources. This is determined once the initial spec verification\nand does not change until the rollout is restarted",
                    "type": "integer"
                },
                "rolloutTargetSize": {
                    "description": "RolloutTargetSize is the size of the target resources. This is determined once the initial spec verification\nand does not change until the rollout is restarted",
                    "type": "integer"
                },
                "targetGeneration": {
                    "description": "NewPodTemplateIdentifier is a string that uniquely represent the new pod template\neach workload type could use different ways to identify that so we cannot compare between resources",
                    "type": "string"
                },
                "upgradedReadyReplicas": {
                    "description": "UpgradedReadyReplicas is the number of Pods upgraded by the rollout controller that have a Ready Condition.",
                    "type": "integer"
                },
                "upgradedReplicas": {
                    "description": "UpgradedReplicas is the number of Pods upgraded by the rollout controller",
                    "type": "integer"
                }
            }
        },
        "common.AppStatus": {
            "type": "object",
            "properties": {
                "appliedResources": {
                    "description": "AppliedResources record the resources that the  workflow step apply.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.ClusterObjectReference"
                    }
                },
                "components": {
                    "description": "Components record the related Components created by Application Controller",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ObjectReference"
                    }
                },
                "conditions": {
                    "description": "Conditions of the resource.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/condition.Condition"
                    }
                },
                "latestRevision": {
                    "description": "LatestRevision of the application configuration it generates\n+optional",
                    "$ref": "#/definitions/common.Revision"
                },
                "observedGeneration": {
                    "description": "The generation observed by the application controller.\n+optional",
                    "type": "integer"
                },
                "resourceTracker": {
                    "description": "ResourceTracker record the status of the ResourceTracker",
                    "$ref": "#/definitions/v1.ObjectReference"
                },
                "rollout": {
                    "$ref": "#/definitions/common.AppRolloutStatus"
                },
                "services": {
                    "description": "Services record the status of the application services",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.ApplicationComponentStatus"
                    }
                },
                "status": {
                    "type": "string"
                },
                "workflow": {
                    "description": "Workflow record the status of workflow",
                    "$ref": "#/definitions/common.WorkflowStatus"
                }
            }
        },
        "common.ApplicationComponent": {
            "type": "object",
            "properties": {
                "dependsOn": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "externalRevision": {
                    "description": "ExternalRevision specified the component revisionName",
                    "type": "string"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.inputItem"
                    }
                },
                "name": {
                    "type": "string"
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.outputItem"
                    }
                },
                "properties": {
                    "description": "+kubebuilder:pruning:PreserveUnknownFields",
                    "$ref": "#/definitions/runtime.RawExtension"
                },
                "scopes": {
                    "description": "+kubebuilder:pruning:PreserveUnknownFields\nscopes in ApplicationComponent defines the component-level scopes\nthe format is \u003cscope-type:scope-instance-name\u003e pairs, the key represents type of ` + "`" + `ScopeDefinition` + "`" + ` while the value represent the name of scope instance.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "traits": {
                    "description": "Traits define the trait of one component, the type must be array to keep the order.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.ApplicationTrait"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "common.ApplicationComponentStatus": {
            "type": "object",
            "properties": {
                "env": {
                    "type": "string"
                },
                "healthy": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ObjectReference"
                    }
                },
                "traits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.ApplicationTraitStatus"
                    }
                },
                "workloadDefinition": {
                    "description": "WorkloadDefinition is the definition of a WorkloadDefinition, such as deployments/apps.v1",
                    "$ref": "#/definitions/common.WorkloadGVK"
                }
            }
        },
        "common.ApplicationTrait": {
            "type": "object",
            "properties": {
                "properties": {
                    "description": "+kubebuilder:pruning:PreserveUnknownFields",
                    "$ref": "#/definitions/runtime.RawExtension"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "common.ApplicationTraitStatus": {
            "type": "object",
            "properties": {
                "healthy": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "common.ClusterObjectReference": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "description": "API version of the referent.\n+optional",
                    "type": "string"
                },
                "cluster": {
                    "type": "string"
                },
                "creator": {
                    "type": "string"
                },
                "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future.\n+optional",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\n+optional",
                    "type": "string"
                },
                "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "uid": {
                    "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "common.Revision": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "revision": {
                    "type": "integer"
                },
                "revisionHash": {
                    "description": "RevisionHash record the hash value of the spec of ApplicationRevision object.",
                    "type": "string"
                }
            }
        },
        "common.SubStepsStatus": {
            "type": "object",
            "properties": {
                "mode": {
                    "type": "string"
                },
                "stepIndex": {
                    "type": "integer"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.WorkflowSubStepStatus"
                    }
                }
            }
        },
        "common.WorkflowStatus": {
            "type": "object",
            "properties": {
                "appRevision": {
                    "type": "string"
                },
                "contextBackend": {
                    "$ref": "#/definitions/v1.ObjectReference"
                },
                "mode": {
                    "type": "string"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.WorkflowStepStatus"
                    }
                },
                "suspend": {
                    "type": "boolean"
                },
                "terminated": {
                    "type": "boolean"
                }
            }
        },
        "common.WorkflowStepStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "description": "A human readable message indicating details about why the workflowStep is in this state.",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phase": {
                    "type": "string"
                },
                "reason": {
                    "description": "A brief CamelCase message indicating details about why the workflowStep is in this state.",
                    "type": "string"
                },
                "subSteps": {
                    "$ref": "#/definitions/common.SubStepsStatus"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "common.WorkflowSubStepStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "description": "A human readable message indicating details about why the workflowStep is in this state.",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phase": {
                    "type": "string"
                },
                "reason": {
                    "description": "A brief CamelCase message indicating details about why the workflowStep is in this state.",
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "common.WorkloadGVK": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                }
            }
        },
        "common.inputItem": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "parameterKey": {
                    "type": "string"
                }
            }
        },
        "common.outputItem": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "valueFrom": {
                    "type": "string"
                }
            }
        },
        "condition.Condition": {
            "type": "object",
            "properties": {
                "lastTransitionTime": {
                    "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                    "type": "string"
                },
                "message": {
                    "description": "A Message containing details about this condition's last transition from\none status to another, if any.\n+optional",
                    "type": "string"
                },
                "reason": {
                    "description": "A Reason for this condition's last transition from one status to another.",
                    "type": "string"
                },
                "status": {
                    "description": "Status of this condition; is it currently True, False, or Unknown?",
                    "type": "string"
                },
                "type": {
                    "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                    "type": "string"
                }
            }
        },
        "ginx.XResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "msg": {
                    "type": "string"
                },
                "transaction.id": {
                    "type": "string"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "intstr.IntOrString": {
            "type": "object",
            "properties": {
                "intVal": {
                    "type": "integer"
                },
                "strVal": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "model.Permission": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "menu": {
                    "type": "boolean"
                },
                "method": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parentId": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Role": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "onlyKey": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Permission"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Service": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "parentId": {
                    "type": "integer"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Service"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "email": {
                    "description": "唯一",
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "passWord": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Role"
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Service"
                    }
                },
                "token": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "permission.SwagCreatePermissionBody": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "menu": {
                    "type": "boolean"
                },
                "method": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parentId": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "permission.SwagUpdatePermissionBody": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "menu": {
                    "type": "boolean"
                },
                "method": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parentId": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "role.SwagBindRolePermissionBody": {
            "type": "object",
            "properties": {
                "permission_id": {
                    "type": "integer"
                }
            }
        },
        "role.SwagUnBindRolePermissionBody": {
            "type": "object",
            "properties": {
                "permission_id": {
                    "type": "integer"
                }
            }
        },
        "runtime.RawExtension": {
            "type": "object"
        },
        "user.SwagBindUserPermissionBody": {
            "type": "object",
            "properties": {
                "domain_id": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "user.SwagCreateBody": {
            "type": "object",
            "properties": {
                "hello": {
                    "type": "string"
                }
            }
        },
        "user.SwagUnBindUserPermissionBody": {
            "type": "object",
            "properties": {
                "domain_id": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "v1.FieldsV1": {
            "type": "object"
        },
        "v1.ManagedFieldsEntry": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the version of this resource that this field set\napplies to. The format is \"group/version\" just like the top-level\nAPIVersion field. It is necessary to track the version of a field\nset because it cannot be automatically converted.",
                    "type": "string"
                },
                "fieldsType": {
                    "description": "FieldsType is the discriminator for the different fields format and version.\nThere is currently only one possible value: \"FieldsV1\"",
                    "type": "string"
                },
                "fieldsV1": {
                    "description": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.\n+optional",
                    "$ref": "#/definitions/v1.FieldsV1"
                },
                "manager": {
                    "description": "Manager is an identifier of the workflow managing these fields.",
                    "type": "string"
                },
                "operation": {
                    "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created.\nThe only valid values for this field are 'Apply' and 'Update'.",
                    "type": "string"
                },
                "subresource": {
                    "description": "Subresource is the name of the subresource used to update that object, or\nempty string if the object was updated through the main resource. The\nvalue of this field is used to distinguish between managers, even if they\nshare the same name. For example, a status update will be distinct from a\nregular update using the same manager name.\nNote that the APIVersion field is not related to the Subresource field and\nit always corresponds to the version of the main resource.",
                    "type": "string"
                },
                "time": {
                    "description": "Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.ObjectReference": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "description": "API version of the referent.\n+optional",
                    "type": "string"
                },
                "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future.\n+optional",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\n+optional",
                    "type": "string"
                },
                "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "uid": {
                    "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.OwnerReference": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                },
                "blockOwnerDeletion": {
                    "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional",
                    "type": "boolean"
                },
                "controller": {
                    "description": "If true, this reference points to the managing controller.\n+optional",
                    "type": "boolean"
                },
                "kind": {
                    "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names",
                    "type": "string"
                },
                "uid": {
                    "description": "UID of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                    "type": "string"
                }
            }
        },
        "v1alpha1.CanaryMetric": {
            "type": "object",
            "properties": {
                "interval": {
                    "description": "Interval represents the windows size",
                    "type": "string"
                },
                "metricsRange": {
                    "description": "Range value accepted for this metric\n+optional",
                    "$ref": "#/definitions/v1alpha1.MetricsExpectedRange"
                },
                "name": {
                    "description": "Name of the metric",
                    "type": "string"
                },
                "templateRef": {
                    "description": "TemplateRef references a metric template object\n+optional",
                    "$ref": "#/definitions/v1.ObjectReference"
                }
            }
        },
        "v1alpha1.MetricsExpectedRange": {
            "type": "object",
            "properties": {
                "max": {
                    "description": "Maximum value\n+optional",
                    "$ref": "#/definitions/intstr.IntOrString"
                },
                "min": {
                    "description": "Minimum value\n+optional",
                    "$ref": "#/definitions/intstr.IntOrString"
                }
            }
        },
        "v1alpha1.RolloutBatch": {
            "type": "object",
            "properties": {
                "batchRolloutWebhooks": {
                    "description": "RolloutWebhooks provides a way for the batch rollout to interact with an external process\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1alpha1.RolloutWebhook"
                    }
                },
                "canaryMetric": {
                    "description": "CanaryMetric provides a way for the batch rollout process to automatically check certain metrics\nbefore moving to the next batch\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1alpha1.CanaryMetric"
                    }
                },
                "instanceInterval": {
                    "description": "The wait time, in seconds, between instances upgrades, default = 0\n+optional",
                    "type": "integer"
                },
                "maxUnavailable": {
                    "description": "MaxUnavailable is the max allowed number of pods that is unavailable\nduring the upgrade. We will mark the batch as ready as long as there are less\nor equal number of pods unavailable than this number.\ndefault = 0\n+optional",
                    "$ref": "#/definitions/intstr.IntOrString"
                },
                "podList": {
                    "description": "The list of Pods to get upgraded\n+optional\nit is mutually exclusive with the Replicas field",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "replicas": {
                    "description": "Replicas is the number of pods to upgrade in this batch\nit can be an absolute number (ex: 5) or a percentage of total pods\nwe will ignore the percentage of the last batch to just fill the gap\n+optional\nit is mutually exclusive with the PodList field",
                    "$ref": "#/definitions/intstr.IntOrString"
                }
            }
        },
        "v1alpha1.RolloutPlan": {
            "type": "object",
            "properties": {
                "batchPartition": {
                    "description": "All pods in the batches up to the batchPartition (included) will have\nthe target resource specification while the rest still have the source resource\nThis is designed for the operators to manually rollout\nDefault is the the number of batches which will rollout all the batches\n+optional",
                    "type": "integer"
                },
                "canaryMetric": {
                    "description": "CanaryMetric provides a way for the rollout process to automatically check certain metrics\nbefore complete the process\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1alpha1.CanaryMetric"
                    }
                },
                "numBatches": {
                    "description": "The number of batches, default = 1\n+optional",
                    "type": "integer"
                },
                "paused": {
                    "description": "Paused the rollout, default is false\n+optional",
                    "type": "boolean"
                },
                "rolloutBatches": {
                    "description": "The exact distribution among batches.\nits size has to be exactly the same as the NumBatches (if set)\nThe total number cannot exceed the targetSize or the size of the source resource\nWe will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum\nWe highly recommend to leave the last batch's replica field empty\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1alpha1.RolloutBatch"
                    }
                },
                "rolloutStrategy": {
                    "description": "RolloutStrategy defines strategies for the rollout plan\nThe default is IncreaseFirstRolloutStrategyType\n+optional",
                    "type": "string"
                },
                "rolloutWebhooks": {
                    "description": "RolloutWebhooks provide a way for the rollout to interact with an external process\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1alpha1.RolloutWebhook"
                    }
                },
                "targetSize": {
                    "description": "The size of the target resource. The default is the same\nas the size of the source resource.\n+optional",
                    "type": "integer"
                }
            }
        },
        "v1alpha1.RolloutWebhook": {
            "type": "object",
            "properties": {
                "expectedStatus": {
                    "description": "ExpectedStatus contains all the expected http status code that we will accept as success",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "metadata": {
                    "description": "Metadata (key-value pairs) for this webhook\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "method": {
                    "description": "Method the HTTP call method, default is POST",
                    "type": "string"
                },
                "name": {
                    "description": "Name of this webhook",
                    "type": "string"
                },
                "type": {
                    "description": "Type of this webhook",
                    "type": "string"
                },
                "url": {
                    "description": "URL address of this webhook",
                    "type": "string"
                }
            }
        },
        "v1beta1.AppPolicy": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name is the unique name of the policy.",
                    "type": "string"
                },
                "properties": {
                    "description": "+kubebuilder:pruning:PreserveUnknownFields",
                    "$ref": "#/definitions/runtime.RawExtension"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "v1beta1.Application": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "managedFields": {
                    "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ManagedFieldsEntry"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/v1beta1.ApplicationSpec"
                },
                "status": {
                    "$ref": "#/definitions/common.AppStatus"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1beta1.ApplicationSpec": {
            "type": "object",
            "properties": {
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.ApplicationComponent"
                    }
                },
                "policies": {
                    "description": "Policies defines the global policies for all components in the app, e.g. security, metrics, gitops,\nmulti-cluster placement rules, etc.\nPolicies are applied after components are rendered and before workflow steps are executed.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1beta1.AppPolicy"
                    }
                },
                "rolloutPlan": {
                    "description": "RolloutPlan is the details on how to rollout the resources\nThe controller simply replace the old resources with the new one if there is no rollout plan involved\n+optional",
                    "$ref": "#/definitions/v1alpha1.RolloutPlan"
                },
                "workflow": {
                    "description": "Workflow defines how to customize the control logic.\nIf workflow is specified, Vela won't apply any resource, but provide rendered output in AppRevision.\nWorkflow steps are executed in array order, and each step:\n- will have a context in annotation.\n- should mark \"finish\" phase in status.conditions.",
                    "$ref": "#/definitions/v1beta1.Workflow"
                }
            }
        },
        "v1beta1.Workflow": {
            "type": "object",
            "properties": {
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1beta1.WorkflowStep"
                    }
                }
            }
        },
        "v1beta1.WorkflowStep": {
            "type": "object",
            "properties": {
                "dependsOn": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.inputItem"
                    }
                },
                "name": {
                    "description": "Name is the unique name of the workflow step.",
                    "type": "string"
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.outputItem"
                    }
                },
                "properties": {
                    "description": "+kubebuilder:pruning:PreserveUnknownFields",
                    "$ref": "#/definitions/runtime.RawExtension"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8080",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "Swagger Example API",
	Description: "This is a sample server celler server.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
